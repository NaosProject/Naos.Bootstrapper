// --------------------------------------------------------------------------------------------------------------------
// <copyright file="Program.cs" company="Naos Project">
//    Copyright (c) Naos Project 2019. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in Naos.Bootstrapper.Test source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.Bootstrapper.Test
{
    using System;
    using System.Diagnostics;
    using System.Linq;
    using CLAP;

    /// <summary>
    /// Main entry point of the application.
    /// </summary>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public static class Program
    {
        /// <summary>
        /// Main entry point.
        /// </summary>
        /// <param name="args">Arguments for application.</param>
        /// <returns>Exit code.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "Final layer, just print.")]
        public static int Main(string[] args)
        {
            try
            {
                var exitCode = Parser.Run<ConsoleAbstraction>(args);
                return exitCode;
            }
            catch (Exception ex)
            {
                /*---------------------------------------------------------------------------*
                 * This should never be reached but is here as a last ditch effort to ensure *
                 * errors are not lost.                                                      *
                 *---------------------------------------------------------------------------*/
                Console.WriteLine(string.Empty);
                Console.WriteLine(ex.Message);
                Console.WriteLine(ex.StackTrace);
                Console.WriteLine(string.Empty);

                return 1;
            }
        }
    }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1053:StaticHolderTypesShouldNotHaveConstructors", Justification = "Must not be static for CLAP.")]
    public class ConsoleAbstraction
    {
        [Verb(Aliases = "run", IsDefault = false, Description = "Runs the specified type's xUnit tests.")]
        public static void RunTestsInType(
            [Aliases("")] [Description("Name of type to run tests in.")] string typeName,
            [Aliases("")] [Description("Launches the debugger.")] [DefaultValue(false)] bool debug)
        {
            if (debug)
            {
                Debugger.Launch();
            }

            var testAssembly = typeof(Program).Assembly;

            var type = testAssembly.GetTypes().Single(_ => _?.FullName?.Contains(typeName) ?? false);
            using (var runner = new TestRunner(Console.WriteLine))
            {
                runner.RunAllTestsInType(type);
            }
        }
    }
}
